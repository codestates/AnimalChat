{"version":3,"sources":["pages/0.navBar.js","pages/2.signUp.js","pages/8.postRead.js","App.js","index.js"],"names":["navBar","className","Signup","useState","userId","password","nickName","animalName","selectType","animalYob","userInfo","setUserInfo","handleInputValue","e","target","name","value","console","log","Selected","setSelected","Date","startDate","serStartDate","userCheck","setUserCheck","passwordCheck","setPasswordCheck","nickNameCheck","setNickNameCheck","regUserId","regPassword","regNickName","useEffect","checkId","test","checkPassword","checkNickName","onSubmit","preventDefault","type","placeholder","onChange","map","item","selected","date","onClick","alert","axios","defaults","withCredentials","PostRead","reply","setReply","comments","setComments","alt","event","length","toLocaleDateString","el","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9cc89ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function navBar(){\n\n  return (\n    <div className='navBar'>\n      <h1>Animal Chat :)</h1>\n      <p>반려동물 집사 커뮤니티</p>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import Calendar from 'react-calendar'\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\naxios.defaults.withCredentials = true;\n\nexport default function Signup(){\n  // const history = useHistory();\n  const [userInfo, setUserInfo] = useState({\n    userId: '',\n    password: '',\n    nickName: '',\n    animalName: '',\n    selectType: '',\n    animalYob: ''\n  })\n\n  const {userId, password, nickName} = userInfo\n\n  const handleInputValue = (e) => {\n    setUserInfo({ ...userInfo, [e.target.name]: e.target.value });\n    console.log(e.target.value);\n  };\n  \n  // 반려동물 type 선택\n  const selectList = ['선택하세요', '햄스터', '병아리', '앵무새', '토끼', '고슴도치']\n  const [Selected, setSelected] = useState('선택하세요');\n\n  const handleSelect = (e) => {\n    setSelected(e.target.value);\n  };\n\n  // 반려동물 출생년도\n  const [startDate, serStartDate] = useState(new Date())\n\n//////////////////////////////////////////\n\n  // userId 유효성검사 test\n  const [userCheck, setUserCheck] = useState(false)\n  const [passwordCheck, setPasswordCheck] = useState(false)\n  const [nickNameCheck, setNickNameCheck] = useState(false)\n\n  // 유효성 검사 (아이디, 비밀번호, 닉네임) , 중복 사용이 있는지 확인 필요\n  let regUserId = /^[a-zA-z0-9]{6,12}$/ // 아이디\n  let regPassword = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{4,15}$/ // 비밀번호\n  let regNickName = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]{2,15}$/   // 닉네임, 2 ~ 15자 한글, 영문, 숫자\n\n  // 아이디\n  useEffect(() => {\n    if(userId){\n      const checkId = regUserId.test(userId)\n      // console.log('아이디 유효성 검사 : ', checkId)\n      // console.log(userId);\n  \n      if(checkId){\n        setUserCheck(true)\n      }else{\n        setUserCheck(false)\n        \n      }\n    }\n  }, [userId])\n\n  // 비밀번호\n  useEffect(() => {\n    if(password){\n      const checkPassword = regPassword.test(password)\n  \n      if(checkPassword){\n        setPasswordCheck(true)\n      }else{\n        setPasswordCheck(false)\n        \n      }\n    }\n  }, [password])\n\n  // 닉네임\n  useEffect(() => {\n    if(nickName){\n      const checkNickName = regNickName.test(nickName)\n  \n      if(checkNickName){\n        setNickNameCheck(true)\n      }else{\n        setNickNameCheck(false)\n        \n      }\n    }\n  }, [nickName])\n\n\n  // 입력한 정보가 중복되지않았고 유효성 검사 true 가 나왔을경우의 조건\n\n  // 회원가입 버튼\n  const handleSubmit = () =>{\n\n    if (userCheck && passwordCheck && nickNameCheck && (Selected !== '선택하세요')){\n      alert('회원가입 완료')\n      console.log(userCheck);\n\n    } else {  // 입력하지 않았을때\n      alert('모든 항목은 필수입니다.');\n      console.log('회원가입버튼 userCheck',userCheck);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"form\">\n        <center className=\"center\">\n          <h1>회원가입</h1>\n          <form onSubmit={(e) => e.preventDefault()}>\n            <div>\n              <p>아이디</p>\n              <input type='userId' name='userId' placeholder='6 ~ 12자, 영문 또는 숫자' onChange={handleInputValue}   />\n            </div>\n\n            <div>\n              <p>비밀번호</p>\n              <input type='password' name='password' placeholder='4 ~ 15자, 영문과 숫자 포함' type='password' onChange={handleInputValue} />\n            </div>   \n\n            <div>\n              <p>닉네임(2글자 이상)</p>\n              <input placeholder=\"2 ~ 15자, 한글, 영문, 숫자\" type='nickName' name='nickName' onChange={handleInputValue} />\n            </div>         \n\n            <div>\n              <h3>반려동물 정보</h3>\n\n              <p>반려동물의 종류</p>\n              <select onChange={handleSelect} value={Selected} >\n                {selectList.map((item) => (\n                  <option value={item} key={item}>\n                    {item}\n                    {/* {console.log(Selected)} */}\n                  </option>\n                ))}\n              </select>\n\n            </div>\n            \n            <div>\n              <p>반려동물의 이름</p>\n              <input type='animalName' name='animalName' onChange={handleInputValue} />\n            </div>\n\n            <div>\n              <p>반려동물의 생년월일</p>\n              <DatePicker selected={startDate} onChange={date => serStartDate(date)}/>\n            </div>\n\n            <div>\n              <button type='submit' onClick={handleSubmit}>회원가입</button>\n              <button>취소</button>\n            </div>\n\n            {/* <div className='alert-box'>{errorMessage}</div> */}\n          </form>\n        </center>\n      </div>\n    </>\n  );\n}\n\n\n\n/*\n  Input\n    아이디(유효성검사)\n    비밀번호(유효성검사)\n    닉네임(유효성검사, 2글자 이상)\n    반려동물 종류(드롭박스 선택)\n    반려동물 이름\n    반려동물 나이(출생년도 선택)\n  버튼\n    회원가입\n    취소\n*/\n","import React, { useState } from 'react';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nexport default function PostRead(){\n  // 내사진\n  // 게시물 제목\n  // 게시물 날짜\n  // 수정, 삭제 버튼\n  // 내 새끼 사진\n  // 게시물 내용\n  // 댓글작성칸, 작성버튼\n  // 댓글 목록 - 아이디, 내용, 날짜, 삭제버튼\n\n\n  // 댓글\n  const [userId, setUserId] = useState('')  // 댓글아이디는 작성안함\n  const [reply, setReply] = useState('')  // 작성된 댓글\n  const [comments, setComments] = useState([])  // 댓글 목록\n  \n  // 댓글작성 버튼\n  const handleButtonClick = (event) => {\n    const comment = { // 새로작성된 댓글\n      id: comments.length + 1,\n      // userId: userId,\n      comment: reply,\n      createdAt: new Date().toLocaleDateString('ko-kr'),\n      updatedAt: new Date().toLocaleDateString('ko-kr'),\n    }\n    setComments([reply, ...setComments])\n  }\n\n  // 댓글내용\n  const handleChangeMsg = (event) => {\n    setReply(event.target.value)\n  }\n\n  return (\n    <div>\n      {/* 내사진, 제목, 날짜, 버튼 */}\n      <div className='postTitle'>\n        <div className='postTitle_left'>\n          <img className='profilePic' alt='프로필사진'/>\n          <h1 className='title'>우리집 애기 봐주세요</h1>\n          <p>2030.09.0811:03</p>\n        </div>\n\n        <div className='postTitle_right'>\n          <button>수정</button>\n          <button>삭제</button> \n        </div>\n      </div>\n\n      {/* 게시물 사진 */}\n      <div className='postPic'>\n        <img className='picture' alt='게시물 사진'></img>\n      </div>\n\n      {/* 게시물 내용 */}\n      <div className='postContent'>\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n        안녕하세요~ 저희집 고슴이에요ᄒᄒ 이번에 목욕했는데 엄청 귀엽죠 ,,,, ᄒᄒ\n      </div>\n\n      {/* 댓글 작성 */}\n      <div className='postComment'>\n        <input className='inputComment' type='text' placeholder='댓글을 작성해주세요.' onChange={handleChangeMsg}/>\n        <button onClick={handleButtonClick}>작성</button>\n      </div>\n      \n      {/* 댓글 목록 */}\n      <ul className='commentsList'>\n        <li className='comment'>\n          <div className='comment_left'>\n            <p>park</p>\n            <p>뭐야 귀여워요ᅲᅲ</p>\n          </div>\n          <div className='comment_right'>\n            <p>2030.09.08 15:03</p>\n            <button>삭제</button>\n          </div>\n        </li>\n\n        <li className='comment'>\n          <div className='comment_left'>\n            <p>park</p>\n            <p>뭐야 귀여워요ᅲᅲ</p>\n          </div>\n          <div className='comment_right'>\n            <p>2030.09.08 15:03</p>\n            <button>삭제</button>\n          </div>\n        </li>\n\n        {comments.map((el) => {\n          <li reply={el}></li>\n        })}\n      </ul>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { Switch, Route} from \"react-router-dom\"\n// import axios from \"axios\"\nimport NavBar from \"./pages/0.navBar\"\n// import FirstPage from \"./pages/1.firstPage\"\nimport Signup from \"./pages/2.signUp\"\n// import MainPage from \"./pages/4.mainPage\"\nimport PostRead from \"./pages/8.postRead\"\n\nimport \"./App.css\"\n\nfunction App() {\n  // /// 서버배포정상 완료시 테스트 코드\n  // const [isLogin, setIsLogin] = useState(false)\n  // function onclickButton() {\n  //   axios\n  //     .get(\"http://localhost:4001/\", { withCredentials: true })\n  //     .then(function (response) {\n  //       setIsLogin(true)\n  //     })\n  // }\n  // return (\n  //   <div className=\"App\">\n  //     <button onClick={onclickButton}> 버튼 </button>\n  //     {isLogin ? \"hello world\" : \"welcome hell world :)\"}\n  //   </div>\n  // )\n  // ///\n\n  // const [isLogin, setIsLogin] = useState(false)\n\n  // 회원가입\n  // https://animalchat/signup\n\n  return (\n    <>\n      <NavBar />\n      <div className='entire'>\n\n        <Switch>\n          <Route path='/signup'>\n            <Signup />\n          </Route>\n\n          <Route path='/postread'>\n            <PostRead />\n          </Route>\n\n          {/* <Route path=\"/firstpage\">\n            <FirstPage />\n          </Route> */}\n\n          {/* <Route exact path=\"/mainpage\">\n            <MainPage />\n          </Route> */}\n\n          {/* <Route path=\"/\">\n            {isLogin ? <Redirect to=\"/firstpage\" /> : <Redirect to=\"/mainpage\" />}\n          </Route> */}\n\n        </Switch>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}